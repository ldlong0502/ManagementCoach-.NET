<Window x:Class="ManagementCoach.Views.Screens.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManagementCoach.Views.Screens"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Title="LoginWindow" Height="540" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Storyboard1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.528"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="-147.2"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.953"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-5.718"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1.369"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50.4"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="105.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="49.2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="-124.8"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="-121.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="label2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="6.4"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="-81.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="-1.6"/>
            </DoubleAnimationUsingKeyFrames>


        </Storyboard>
    </Window.Resources>
    <Grid Margin="0,0,0,-3">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                <GradientStop Color="AliceBlue" Offset="1.0"></GradientStop>
                <GradientStop Color="AntiqueWhite" Offset="0.0"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>

        <Label Content="Login to your account" 
               HorizontalAlignment="Left" 
               FontWeight="Bold"
               Height="38" VerticalAlignment="Top" Width="238" Margin="281,266,0,0" FontSize="22" Grid.ColumnSpan="2"/>
        <Button Style="{DynamicResource ButtonStyle1}" 
                Foreground="White"
                FontSize="18"
                Content="Sign In" HorizontalAlignment="Left" 
                Height="45" Margin="215,435,0,0" VerticalAlignment="Top" Width="116" Background="#FF6600FF"/>

        <Grid x:Name="User" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="49" Margin="215,309,0,0" VerticalAlignment="Top" Width="400">
            <Rectangle  HorizontalAlignment="Center" Height="49" Stroke="Black" VerticalAlignment="Center" Width="400" RadiusX="15.847" RadiusY="15.847"/>
            <Image HorizontalAlignment="Left" Height="30" Margin="10,0,0,0" VerticalAlignment="Center" Width="30" Source="/Images/user.png"/>
            <TextBox HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="48" Margin="58,0,0,0" TextWrapping="Wrap" Text="Username" VerticalAlignment="Center" Width="315" BorderBrush="{x:Null}" Background="{x:Null}" FontSize="16" Cursor="Hand"/>
        </Grid>
        <Grid x:Name="Pass" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="49" Margin="215,373,0,0" VerticalAlignment="Top" Width="400">
            <Rectangle  HorizontalAlignment="Center" Height="49" Stroke="Black" VerticalAlignment="Center" Width="400" RadiusX="15.847" RadiusY="15.847"/>
            <Image HorizontalAlignment="Left" Height="30" Margin="10,0,0,0" VerticalAlignment="Center" Width="30" Source="/Images/lock.png"/>
            <TextBox HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="48" Margin="58,0,0,0" TextWrapping="Wrap" Text="Password" VerticalAlignment="Center" Width="315" BorderBrush="{x:Null}" Background="{x:Null}" FontSize="16"/>


        </Grid>
        <Label x:Name="label" Content="Login to your account" 
            HorizontalAlignment="Left" 
            FontWeight="Bold"           
            Height="68" VerticalAlignment="Top" Width="238" Margin="281,495,0,0" FontSize="22" Grid.ColumnSpan="2" RenderTransformOrigin="0.512,1.787">
            <Label.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Label.RenderTransform>
            <Label.Triggers>
                <EventTrigger RoutedEvent="MouseDown">
                    <BeginStoryboard  Storyboard="{DynamicResource Storyboard1}"/>
                </EventTrigger>
            </Label.Triggers>
        </Label>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" 
                       Height="13" 
                       Margin="363,398,0,0" 
                       TextWrapping="Wrap" 
                       FontSize="10"
                       TextAlignment="Center"
                       Text="Don't have account ?" VerticalAlignment="Top" Width="93" Grid.ColumnSpan="2" >
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Left" 
                Height="18" 
                Margin="363,398,0,0" 
                TextWrapping="Wrap" 
                FontSize="14"
                FontWeight="Bold"
                TextAlignment="Center"
                Text="Sign up" VerticalAlignment="Top" Width="50" Grid.ColumnSpan="2" >
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Grid x:Name="Top" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" Height="437" Width="800" >
            <Path x:Name="path" Data="M9.4796339,211.65496 C9.4796339,211.65496 12.38387,240.5533 59.426881,240.5533 106.46989,240.5533 741.14011,240.06829 737.08636,240.06829 733.03262,240.06829 799.36519,240.55732 804.76804,289.05136 810.17089,337.5454 799.5739,39.595855 799.5739,39.595855 L-6.4646081,39.35207" Fill="#FF4A5BF7" HorizontalAlignment="Center" Stroke="Transparent" Stretch="Fill" Width="837" Margin="0,-54,0,-133" RenderTransformOrigin="0.5,0.5" >
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Label x:Name="label1" Content="Welcome to" 
                HorizontalAlignment="Left" 
                Height="auto" 
                FontSize="20"
                FontFamily="Roboto"
                Foreground="White"
                VerticalAlignment="Top" 
                Width="auto" Margin="161,138,0,0" RenderTransformOrigin="0.5,0.5">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <Label x:Name="label2" Content="LOGIN" 
                HorizontalAlignment="Left" 
                Height="auto" 
                FontSize="40"
                FontWeight="Bold"
                FontFamily="Roboto"
                Foreground="White"
                VerticalAlignment="Top" 
                Width="auto" Margin="153,178,0,0" RenderTransformOrigin="0.423,0.241">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <Image x:Name="image" HorizontalAlignment="Left" Height="300" Margin="456,51,0,0" VerticalAlignment="Top" Width="300" Source="/Images/logo.png" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>

        </Grid>
        <Button x:Name="btnMinimize"
                            Grid.Column="1"
                            Content="-"
                Height="30" Width="30"
                            Cursor="Hand"
                            Foreground="White"
                            FontFamily="Montserrat"
                            FontSize="25"
                            Click="btnMinimize_Click" Margin="310,0,60,495"
                            >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightSkyBlue">
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AntiqueWhite"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Height="30" Width="30" CornerRadius="15"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="btnClose"
            Grid.Column="1"
            Content="x"
            Height="30" Width="30"
            Cursor="Hand"
            Foreground="White"
            FontFamily="Montserrat"
            FontSize="25"
            Click="btnClose_Click" Margin="350,0,10,493"
                            >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Red"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AntiqueWhite"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Height="30" Width="30" CornerRadius="15"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>


    </Grid>

</Window>
